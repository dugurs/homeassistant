blueprint:
  source_url: https://github.com/dugurs/homeassistant/blob/main/blueprints/automation/humidifier_switch_control/humidifier_switch_control.yaml
  name: 가(제)습기 스위치 제어
  description:
    "습도 설정이 불가능한 가(제)습기 제어용.\n v2.0\n ---------\n 필요 구성요소는
    switch 또는 humidifier 그리고 humidity sensor 입니다.\n 밤, 낮으로 구분하여 켜기 끄기 습도를 설정 할수 있습니다."
  domain: automation
  input:
    humidity_switch:
      name: 가(제)습기 스위치
      description: switch 또는 humidifier 선택
      selector:
        entity:
          domain:
            - switch
            - humidifier
          multiple: false
    device_type:
      name: 장치 타입
      description: ""
      default: 가습기
      selector:
        select:
          mode: dropdown
          options:
            - 가습기
            - 제습기
    humidity_sensor:
      name: 습도 센서
      description: ""
      selector:
        entity:
          domain: sensor
          device_class: humidity
          multiple: false
    door_sensor:
      name: 도어 센서
      description: "문이 열리면 10초후에 가습기를 끕니다."
      selector:
        entity:
          domain: binary_sensor
          device_class:
            - door
            - window
          multiple: true
    day_humidity_target:
      name: 낮 목표 습도
      description: 낮 시간에 설정 습도 이하면 스위치를 켭니다
      default: 50
      selector:
        number:
          min: 40.0
          max: 70.0
          unit_of_measurement: "%"
          mode: slider
          step: 1.0
    night_humidity_target:
      name: 밤 목표 습도
      description: 밤 시간에 설정 습도 이하면 스위치를 켭니다
      default: 53
      selector:
        number:
          min: 40.0
          max: 70.0
          unit_of_measurement: "%"
          mode: slider
          step: 1.0
    target_tolerance:
      name: 목표 습도 공차
      description: 목표 습도 60%, 공차 1% 설정시 59%, 61%에서 트리거
      default: 2
      selector:
        number:
          min: 1.0
          max: 10.0
          unit_of_measurement: "%"
          mode: slider
          step: 1.0
    day_time_after:
      name: 낮 시작 시간
      description: 부터
      default: "8:00:00"
      selector:
        time: {}
    day_time_before:
      name: 낮 끝 시간
      description: 까지
      default: "21:00:00"
      selector:
        time: {}

trigger:
  - platform: state
    entity_id: !input door_sensor
  - platform: time_pattern
    minutes: /1
    id: timePattern

variables:
  humidity_switch: !input humidity_switch
  device_type: !input device_type
  humidity_sensor: !input humidity_sensor
  door_sensor: !input door_sensor
  day_humidity_target: !input day_humidity_target
  night_humidity_target: !input night_humidity_target
  target_tolerance: !input target_tolerance
  day_time_after: !input day_time_after
  day_time_before: !input day_time_before
  switch_domain: "{{ humidity_switch.split('.')[0] }}"
  door_open: "{{ expand(door_sensor) | selectattr('state', 'eq', 'on') | list | count }}"
  target_humidity: "{{ iif( today_at(day_time_after) <= now() and today_at(day_time_before) >= now() , day_humidity_target|float, night_humidity_target|float) }}"
  humidity1: "{{ states(humidity_sensor)|float }}"
  onoff: >-
    {% if (humidity1 - target_humidity)|abs >= target_tolerance|float %} # 목표온도 +- 공차 값보다 크면
      {% if humidity1 - target_humidity > 0 %} # 습도가 높고, 가습기면 끄고 제습기면 켜고 
        {{ iif (device_type == '가습기' , 'off', 'on') }}
      {% else %} # 습도가 낮고, 가습기면 켜고, 제습기면 끄고
        {{ iif (device_type == '가습기' , 'on', 'off') }}
      {% endif %}
    {% endif %}

action:
  - if: # 도어센서기 있고 열려있으면
      - condition: template
        value_template: "{{ door_sensor | count > 0 }}"
      - condition: template
        value_template: "{{ door_open > 0 }}"
    then:
      - delay: "00:00:10"
      - service: "{{switch_domain}}.turn_off"
        data: {}
        target:
          entity_id: !input humidity_switch
    else:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ onoff == 'on' }}"
              - condition: state
                state: "off"
                entity_id: !input humidity_switch
            sequence:
              - service: "{{switch_domain}}.turn_on"
                data: {}
                target:
                  entity_id: !input humidity_switch
          - conditions:
              - condition: template
                value_template: "{{ onoff == 'off' }}"
              - condition: state
                state: "on"
                entity_id: !input humidity_switch
            sequence:
              - service: "{{switch_domain}}.turn_off"
                data: {}
                target:
                  entity_id: !input humidity_switch
        default: []
mode: restart
max_exceeded: silent
